import { OpaqueToken } from "@angular/core";
import { Http } from "@angular/http";
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/map';
import { IAuth } from "x-common-lib";
import { WindowService } from "x-common-lib";
export declare let OAUTHSERVICE_CONFIG_TOKEN: OpaqueToken;
export declare class OAuthService implements IAuth {
    private windows;
    private http;
    private config;
    private oAuthCallbackUrl;
    private oAuthTokenUrl;
    private oAuthUserUrl;
    private oAuthUserNameField;
    private logoutUrl;
    private authed;
    private token_type;
    private id_token;
    private access_token;
    private expires;
    private state;
    private session_state;
    private userInfo;
    private windowHandle;
    private intervalId;
    private expiresTimerId;
    private loopCount;
    private intervalLength;
    private locationWatcher;
    private subscription;
    constructor(windows: WindowService, http: Http, config: any);
    subscribe(onNext: (value: any) => void, onThrow?: (exception: any) => void, onReturn?: () => void): any;
    login(): void;
    authenticated(): boolean;
    getSession(): {
        authenticated: boolean;
        id_token: string;
        access_token: string;
        expires: any;
    };
    getUserInfo(): any;
    getUserName(): any;
    logout(): void;
    private clearSession();
    private fetchUserInfo();
    private startExpiresTimer(seconds);
    private parse(str);
    private emitAuthStatus(success);
}
